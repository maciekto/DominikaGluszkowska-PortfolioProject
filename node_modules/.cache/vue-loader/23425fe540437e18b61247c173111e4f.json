{"remainingRequest":"C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\src\\components\\Section3.vue?vue&type=template&id=4c1bd71e&","dependencies":[{"path":"C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\src\\components\\Section3.vue","mtime":1599067014660},{"path":"C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594198757907},{"path":"C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1594198769479},{"path":"C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594198757907},{"path":"C:\\Users\\maciekto\\Documents\\learning\\domaPortfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":1594198769478}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}